package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"
	"study-gator-backend/graph/model"
)

// ID is the resolver for the id field.
func (r *postResolver) ID(ctx context.Context, obj *model.Post) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Attachments is the resolver for the attachments field.
func (r *postResolver) Attachments(ctx context.Context, obj *model.Post) ([]*model.PostAttachment, error) {
	panic(fmt.Errorf("not implemented: Attachments - attachments"))
}

// ID is the resolver for the id field.
func (r *postAttachmentResolver) ID(ctx context.Context, obj *model.PostAttachment) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Post returns PostResolver implementation.
func (r *Resolver) Post() PostResolver { return &postResolver{r} }

// PostAttachment returns PostAttachmentResolver implementation.
func (r *Resolver) PostAttachment() PostAttachmentResolver { return &postAttachmentResolver{r} }

type postResolver struct{ *Resolver }
type postAttachmentResolver struct{ *Resolver }

package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"
	"study-gator-backend/graph/model"
)

// ID is the resolver for the id field.
func (r *friendRequestResolver) ID(ctx context.Context, obj *model.FriendRequest) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// ID is the resolver for the id field.
func (r *userResolver) ID(ctx context.Context, obj *model.User) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// AuthInfo is the resolver for the authInfo field.
func (r *userResolver) AuthInfo(ctx context.Context, obj *model.User) (*model.AuthInfo, error) {
	panic(fmt.Errorf("not implemented: AuthInfo - authInfo"))
}

// Profile is the resolver for the profile field.
func (r *userResolver) Profile(ctx context.Context, obj *model.User) (*model.Profile, error) {
	panic(fmt.Errorf("not implemented: Profile - profile"))
}

// FriendRequest returns FriendRequestResolver implementation.
func (r *Resolver) FriendRequest() FriendRequestResolver { return &friendRequestResolver{r} }

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

type friendRequestResolver struct{ *Resolver }
type userResolver struct{ *Resolver }

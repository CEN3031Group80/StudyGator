package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"
	"study-gator-backend/graph/model"
)

// ID is the resolver for the id field.
func (r *classResolver) ID(ctx context.Context, obj *model.Class) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// ClassInfo is the resolver for the classInfo field.
func (r *classResolver) ClassInfo(ctx context.Context, obj *model.Class) (*model.ClassInfo, error) {
	panic(fmt.Errorf("not implemented: ClassInfo - classInfo"))
}

// StudyGroups is the resolver for the studyGroups field.
func (r *classResolver) StudyGroups(ctx context.Context, obj *model.Class) ([]*model.StudyGroup, error) {
	panic(fmt.Errorf("not implemented: StudyGroups - studyGroups"))
}

// Class returns ClassResolver implementation.
func (r *Resolver) Class() ClassResolver { return &classResolver{r} }

type classResolver struct{ *Resolver }
